// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Image creates an image with a custom url of a custom size 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <img
    alt={undefined}
    src="url"
    style={
      Object {
        "height": "100px",
        "width": "100px",
      }
    }
    unselectable="on"
  />,
  "nodes": Array [
    <img
      alt={undefined}
      src="url"
      style={
        Object {
          "height": "100px",
          "width": "100px",
        }
      }
      unselectable="on"
    />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Image
        chunk={
          Object {
            "modelState": Object {
              "height": 100,
              "size": "custom",
              "url": "url",
              "width": 100,
            },
          }
        }
      />,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Image {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "chunk": Object {
            "modelState": Object {
              "height": 100,
              "size": "custom",
              "url": "url",
              "width": 100,
            },
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <img
          alt={undefined}
          src="url"
          style={
            Object {
              "height": "100px",
              "width": "100px",
            }
          }
          unselectable="on"
        />,
        "_debugID": 6,
        "_renderedOutput": <img
          alt={undefined}
          src="url"
          style={
            Object {
              "height": "100px",
              "width": "100px",
            }
          }
          unselectable="on"
        />,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Image
    chunk={
      Object {
        "modelState": Object {
          "height": 100,
          "size": "custom",
          "url": "url",
          "width": 100,
        },
      }
    }
  />,
}
`;

exports[`Image creates an image with a custom url of a preset size 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <img
    alt="alt text"
    src="url"
    unselectable="on"
  />,
  "nodes": Array [
    <img
      alt="alt text"
      src="url"
      unselectable="on"
    />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Image
        chunk={
          Object {
            "modelState": Object {
              "alt": "alt text",
              "size": "small",
              "url": "url",
            },
          }
        }
      />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Image {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "chunk": Object {
            "modelState": Object {
              "alt": "alt text",
              "size": "small",
              "url": "url",
            },
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <img
          alt="alt text"
          src="url"
          unselectable="on"
        />,
        "_debugID": 4,
        "_renderedOutput": <img
          alt="alt text"
          src="url"
          unselectable="on"
        />,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Image
    chunk={
      Object {
        "modelState": Object {
          "alt": "alt text",
          "size": "small",
          "url": "url",
        },
      }
    }
  />,
}
`;

exports[`Image renders without error 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="img-placeholder"
    style={
      Object {
        "backgroundImage": "",
        "backgroundSize": "16px",
        "height": "300px",
      }
    }
  />,
  "nodes": Array [
    <div
      className="img-placeholder"
      style={
        Object {
          "backgroundImage": "",
          "backgroundSize": "16px",
          "height": "300px",
        }
      }
    />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Image
        chunk={
          Object {
            "modelState": Object {
              "alt": "alt text",
              "size": "small",
            },
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Image {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "chunk": Object {
            "modelState": Object {
              "alt": "alt text",
              "size": "small",
            },
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="img-placeholder"
          style={
            Object {
              "backgroundImage": "",
              "backgroundSize": "16px",
              "height": "300px",
            }
          }
        />,
        "_debugID": 2,
        "_renderedOutput": <div
          className="img-placeholder"
          style={
            Object {
              "backgroundImage": "",
              "backgroundSize": "16px",
              "height": "300px",
            }
          }
        />,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Image
    chunk={
      Object {
        "modelState": Object {
          "alt": "alt text",
          "size": "small",
        },
      }
    }
  />,
}
`;
