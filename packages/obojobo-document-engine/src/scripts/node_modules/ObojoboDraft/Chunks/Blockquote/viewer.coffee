require './viewer.scss'

Common = window.ObojoboDraft.Common
TextGroup = Common.textGroup.TextGroup
TextGroupEl = Common.chunk.textChunk.TextGroupEl
TextChunk = Common.chunk.TextChunk
SelectionHandler = Common.chunk.textChunk.TextGroupSelectionHandler

selectionHandler = new SelectionHandler()

Blockquote = React.createClass
	statics:
		type: 'ObojoboDraft.Chunks.Blockquote'
		register: -> OBO.registerChunk Blockquote
		getSelectionHandler: (chunk) -> selectionHandler

		createNewNodeData: ->
			textGroup: TextGroup.create(2, { indent:0 }, 2)
			# citation: TextGroup.create(1, { indent:0 }, 1)

		cloneNodeData: (data) ->
			textGroup: data.textGroup.clone()
			# citation: data.citation.clone()
			type: data.type

		createNodeDataFromDescriptor: (descriptor) ->
			textGroup: TextGroup.fromDescriptor descriptor.content.textGroup, 2, { indent:0 }
			# citation: TextGroup.fromDescriptor descriptor.content.citation, 1, { indent:0 }
			type: descriptor.content.type

		getDataDescriptor: (chunk) ->
			data = chunk.modelState

			textGroup: data.textGroup.toDescriptor()
			# citation: data.citation.toDescriptor()
			type: data.type

	render: ->
		data = @props.chunk.modelState

		# while data.textGroup.length isnt 2
		# 	data.textGroup.add()

		`<TextChunk className="obojobo-draft--chunks--blockquote">
			<blockquote><TextGroupEl parentModel={this.props.model} text={data.textGroup.first.text} groupIndex={data.textGroup.first.index} indent={data.textGroup.first.data.indent} /></blockquote>
			<cite><TextGroupEl parentModel={this.props.model} text={data.textGroup.last.text} groupIndex={data.textGroup.last.index} indent={data.textGroup.last.data.indent} /></cite>
		</TextChunk>`


Blockquote.register()

module.exports = Blockquote