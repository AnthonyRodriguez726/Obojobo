require './viewer-component.scss'

ReactCSSTransitionGroup = React.addons.CSSTransitionGroup

Common = window.ObojoboDraft.Common

OboComponent = Common.components.OboComponent
Dispatcher = Common.flux.Dispatcher
FocusUtil = Common.util.FocusUtil
Button = Common.components.Button

ScoreUtil = window.Viewer.util.ScoreUtil
QuestionUtil = window.Viewer.util.QuestionUtil

QuestionContent = require './Content/viewer-component'


Question = React.createClass
	onClickBlocker: ->
		QuestionUtil.viewQuestion @props.model.get('id')

		if @props.model.modelState.practice
			FocusUtil.focusComponent @props.model.get('id')

		# setTimeout (->
		# 	FocusUtil.unfocus()
		# 	QuestionUtil.hideQuestion @props.model.get('id')
		# ).bind(@), 5000

	render: ->
		if @props.showContentOnly then return @renderContentOnly()

		score = ScoreUtil.getScoreForModel @props.moduleData.scoreState, @props.model
		viewState = QuestionUtil.getViewState @props.moduleData.questionState, @props.model

		assessment = @props.model.children.models[@props.model.children.models.length - 1]
		AssessmentComponent = assessment.getComponentClass()

		`<OboComponent
			model={this.props.model}
			moduleData={this.props.moduleData}
			className={'flip-container obojobo-draft--chunks--question' + (score === null ? '' : (score === 100 ? ' is-correct' : ' is-incorrect')) + ' is-' + viewState + (this.props.model.modelState.practice ? ' is-practice' : ' is-not-practice')}
		>
			<div className="flipper">
				<div className="content back">
					<QuestionContent model={this.props.model} moduleData={this.props.moduleData} />
					<AssessmentComponent
						key={assessment.get('id')}
						model={assessment}
						moduleData={this.props.moduleData}
					/>
				</div>
				<div className="blocker front" key="blocker" onClick={this.onClickBlocker}>
					<Button value={this.props.model.modelState.practice ? 'Try Question' : 'View Question'} />
				</div>
			</div>
		</OboComponent>`

	renderContentOnly: ->
		score = ScoreUtil.getScoreForModel @props.moduleData.scoreState, @props.model
		viewState = QuestionUtil.getViewState @props.moduleData.questionState, @props.model

		`<OboComponent
			model={this.props.model}
			moduleData={this.props.moduleData}
			className={'flip-container obojobo-draft--chunks--question' + (score === null ? '' : (score === 100 ? ' is-correct' : ' is-incorrect')) + ' is-active' + (this.props.model.modelState.practice ? ' is-practice' : ' is-not-practice')}
		>
			<div className="flipper">
				<div className="content back">
					<QuestionContent model={this.props.model} moduleData={this.props.moduleData} />
					<div className="pad responses-hidden">
						(Responses Hidden)
					</div>
				</div>
			</div>
		</OboComponent>`

module.exports = Question