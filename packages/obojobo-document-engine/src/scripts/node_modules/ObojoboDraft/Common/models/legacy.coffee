patternAddUL = /<LI>([\s\S]*?)<\/LI>/gi
patternRemoveExtraUL = /<\/ul><ul>/gi
patternTF = /<\/?textformat\s?[\s\S]*?>/gi

OboModel = require 'ObojoboDraft/Common/models/obomodel'
StyleableText = require 'ObojoboDraft/Common/text/styleabletext'

Legacy =
	createModuleFromObo2ModuleJSON: (json) ->
		oboModule = OboModel.create('ObojoboDraft.Modules.Module')

		objective = OboModel.create 'ObojoboDraft.Sections.Content'
		# oboModule.children.add objective
		objectivePage = OboModel.create 'ObojoboDraft.Pages.Page'
		objective.children.add objectivePage
		objectivePage.children.add Legacy.createChunksFromObo2HTML(json.objective)

		content = OboModel.create 'ObojoboDraft.Sections.Content'
		for page in json.pages
			content.children.add Legacy.createPageFromObo2ModuleJSON(page)

		oboModule.children.add objective
		oboModule.children.add content

		oboModule

	createPageFromObo2ModuleJSON: (json) ->
		page = OboModel.create 'ObojoboDraft.Pages.Page'

		header = OboModel.create 'ObojoboDraft.Chunks.Heading'
		header.modelState.textGroup.first.text.value = json.title
		page.children.add header

		for item in json.items
			switch item.component
				when 'TextArea'
					page.children.add Legacy.createChunksFromObo2HTML(item.data)

				when 'MediaView'
					page.children.add Legacy.createMediaFromObo2JSON(item.media)

		page

	createChunksFromObo2HTML: (html) ->
		chunks = []

		# get rid of all the textformat tags
		html = html.replace(patternTF, "");

		# add <ul></ul> arround list items
		html = html.replace(patternAddUL, "<ul><li>$1</li></ul>")

		#kill extra </ul><ul> that are back to back - this will make proper lists
		html = html.replace(patternRemoveExtraUL, "")

		el = document.createElement 'div'
		document.body.appendChild el
		el.innerHTML = html

		sts = null
		for child in el.children
			switch child.tagName.toLowerCase()
				when 'ul'
					chunk = OboModel.create('ObojoboDraft.Chunks.List')

				else
					chunk = OboModel.create('ObojoboDraft.Chunks.Text')

			tg = chunk.modelState.textGroup
			tg.clear()
			sts = StyleableText.createFromElement child
			for st in sts
				tg.add st

			chunks.push chunk

		document.body.removeChild el

		console.log '-----------------'
		console.log html
		console.log el.innerHTML
		console.log chunks
		console.log sts

		chunks

	createMediaFromObo2JSON: (json) ->
		OboModel.create('ObojoboDraft.Chunks.Figure')

module.exports = Legacy