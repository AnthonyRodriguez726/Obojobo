StyleableTextRenderer = require './styleabletextrenderer'
emptyChar = require('ObojoboDraft/Common/text/textconstants').EMPTY_CHAR

StyleableTextComponent = React.createClass
	createChild: (el, key) ->
		createChild = @createChild
		groupIndex = @props.groupIndex

		attrs =
			key: key.counter++

		switch el.type
			when 'a'
				if el.attrs?.href?
					attrs.href = el.attrs.href
					attrs.target = "_blank"

			when 'span'
				if el.attrs?['class']?
					attrs.className = el.attrs['class']

		React.createElement el.type, attrs, el.children.map( (child, index) ->
			switch child.nodeType
				when 'text'
					if child.html?
						# console.clear()
						# console.log('yes', child.html)
						`<span key={key.counter++} dangerouslySetInnerHTML={{__html:child.html}} />`
					else if child.text.length is 0
						`<span key={key.counter++}>{emptyChar}</span>`
					else if child.text.charAt(child.text.length - 1) is "\n"
						# Hack to force the display of a blank line that has no content
						`<span key={key.counter++}>{child.text}{emptyChar}</span>`
					else
						`<span key={key.counter++}>{child.text}</span>`
					# child.text || emptyChar
				else
					createChild(child, key)
		)

	render: ->
		key = { counter:0 }
		mockElement = StyleableTextRenderer @props.text

		`<span>
			{this.createChild(mockElement, key)}
		</span>`

module.exports = StyleableTextComponent