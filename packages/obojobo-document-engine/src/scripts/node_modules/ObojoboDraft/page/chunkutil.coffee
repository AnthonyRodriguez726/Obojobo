Chunk = require 'ObojoboDraft/models/chunk'

# Utility methods for dealing with chunks

send = (fn, chunkOrChunks, selection, data = []) ->
	if not (chunkOrChunks instanceof Array)
		return chunkOrChunks.callComponentFn fn, selection, data

	chunks = chunkOrChunks
	results = []
	for chunk in chunks
		results.push chunk.callComponentFn fn, selection, data

	results


deleteSelection = (selection) ->
	return if selection.chunk.type is 'caret'
	# console.log JSON.stringify(selection.getSelectionDescriptor(), null, 2);
	# console.log 'con', selection.chunk.inbetween

	for node in selection.chunk.inbetween
		node.remove()

	startChunk = selection.chunk.start.chunk
	endChunk   = selection.chunk.end.chunk

	startChunk.deleteSelection selection

	if selection.chunk.type is 'chunkSpan'
		endChunk.deleteSelection selection
		if endChunk.canMergeWith selection, startChunk
			startChunk.merge selection, endChunk

	selection.chunk.collapse()


activateStyle = (style, selection, styleBrush) ->
	if selection.chunk.type is 'caret'
		styleBrush.add style, selection.styles[style]?
	else
		if selection.styles[style]?
			send 'unstyleSelection', selection.chunk.all, selection, [style]
		else
			send 'styleSelection', selection.chunk.all, selection, [style]


replaceSelection = (newChunk, selection) ->
	deleteSelection selection

	selChunk = selection.chunk.start.chunk
	console.log 'selChunk be all like', selChunk

	switch selChunk.getCaretEdge(selection)
		when 'start'
			selChunk.addBefore newChunk
		when 'end'
			selChunk.addAfter newChunk
		when 'startAndEnd'
			selChunk.replaceWith newChunk
		else
			selChunk.splitText selection
			selChunk.addAfter newChunk

	newChunk


module.exports = {
	send: send
	deleteSelection: deleteSelection
	replaceSelection: replaceSelection
	activateStyle: activateStyle
}