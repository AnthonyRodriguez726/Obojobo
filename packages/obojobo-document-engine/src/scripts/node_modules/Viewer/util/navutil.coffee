Dispatcher = window.ObojoboDraft.Common.flux.Dispatcher
OboModel = window.ObojoboDraft.Common.models.OboModel

NavUtil =
	goPrev: ->
		Dispatcher.trigger 'nav:prev'

	goNext: ->
		Dispatcher.trigger 'nav:next'

	goto: (id) ->
		Dispatcher.trigger 'nav:goto',
			value:
				id: id

	lock: ->
		Dispatcher.trigger 'nav:lock'

	unlock: ->
		Dispatcher.trigger 'nav:unlock'

	close: ->
		Dispatcher.trigger 'nav:close'

	open: ->
		Dispatcher.trigger 'nav:open'

	disable: ->
		Dispatcher.trigger 'nav:disable'

	enable: ->
		Dispatcher.trigger 'nav:enable'

	toggle: ->
		Dispatcher.trigger 'nav:toggle'

	openExternalLink: (url) ->
		Dispatcher.trigger 'nav:openExternalLink',
			value:
				url: url

	getNavTarget: (state) ->
		navItem = state.items[state.navTargetIndex]
		if not navItem then return null

		navItem

	getNavTargetModel: (state) ->
		navTarget = NavUtil.getNavTarget state
		if not navTarget then return null

		OboModel.models[navTarget.id]

	getPrevIndex: (state) ->
		index = state.navTargetIndex

		while true
			index--
			item = state.items[index]

			break if not item?

			if item.type is 'link'
				return index

		null

	getNextIndex: (state) ->
		index = state.navTargetIndex

		while true
			index++
			item = state.items[index]

			break if not item?

			if item.type is 'link'
				return index

		null

	getPrev: (state) ->
		state.items[NavUtil.getPrevIndex(state)]

	getNext: (state) ->
		state.items[NavUtil.getNextIndex(state)]

	getIndexById: (state, id) ->
		for item, index in state.items
			if item.id is id then return index

		null

	canNavigate: (state) ->
		not state.locked and not state.disabled


module.exports = NavUtil