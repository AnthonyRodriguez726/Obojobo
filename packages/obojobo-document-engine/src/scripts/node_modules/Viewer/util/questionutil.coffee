Dispatcher = window.ObojoboDraft.Common.flux.Dispatcher
OboModel = window.ObojoboDraft.Common.models.OboModel

QuestionUtil =
	recordResponse: (id, response) ->
		Dispatcher.trigger 'question:recordResponse',
			value:
				id: id,
				response: response

	resetResponse: (id) ->
		Dispatcher.trigger 'question:resetResponse',
			value:
				id: id

	setData: (id, key, value) ->
		Dispatcher.trigger 'question:setData',
			value:
				key: id + ':' + key,
				value: value

	clearData: (id, key) ->
		Dispatcher.trigger 'question:clearData',
			value:
				key: id + ':' + key

	viewQuestion: (id) ->
		Dispatcher.trigger 'question:view',
			value:
				id: id

	hideQuestion: (id) ->
		Dispatcher.trigger 'question:hide',
			value:
				id: id

	getViewState: (state, model) ->
		modelId = model.get('id')

		if state.viewing is modelId then return 'active'
		if state.viewedQuestions[modelId] then return 'viewed'
		'hidden'

	getResponse: (state, model) ->
		state.responses[model.get('id')]

	hasResponse: (state, model) ->
		typeof state.responses[model.get('id')] isnt 'undefined'

	getData: (state, model, key) ->
		state.data[model.get('id') + ':' + key]


module.exports = QuestionUtil