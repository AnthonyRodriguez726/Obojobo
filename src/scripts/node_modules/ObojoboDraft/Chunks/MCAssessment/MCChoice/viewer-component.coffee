require './viewer-component.scss'

Common = window.ObojoboDraft.Common

OboComponent = Common.components.OboComponent
OboModel = Common.models.OboModel

QuestionUtil = window.Viewer.util.QuestionUtil

MCChoice = React.createClass
	getDefaultProps: ->
		responseType: null
		revealAll: false
		questionSubmitted: false

	# getInitialState: ->
	# 	children: @createChildren(this.props.model.children.models)

	# componentWillReceiveProps: (nextProps) ->
	# 	if nextProps.model?
	# 		@setState { children:@createChildren(this.props.model.children.models) }

	# createChildren: (models) ->
	# 	children = []
	# 	hasFeedback = false
	# 	for model in models
	# 		children.push model
	# 		if model.get('type') is 'ObojoboDraft.Chunks.MCAssessment.MCFeedback'
	# 			hasFeedback = true

	# 	if not hasFeedback
	# 		if @props.model.modelState.score is 100
	# 			children.push @createFeedbackItem('Correct!')
	# 		else
	# 			children.push @createFeedbackItem('Incorrect')

	# 	children

	createFeedbackItem: (message) ->
		feedback = OboModel.create('ObojoboDraft.Chunks.MCAssessment.MCFeedback')
		text = OboModel.create('ObojoboDraft.Chunks.Text')
		# console.log('text', text)
		text.modelState.textGroup.first.text.insertText(0, message)
		# console.log('feedback', feedback)
		feedback.children.add text

		feedback

	# onChange: (event) ->
	# 	if event.target.checked
	# 		QuestionUtil.recordResponse @props.model.get('id'), true
	# 	else
	# 		QuestionUtil.resetResponse @props.model.get('id')

	# onClick: (event) ->
	# 	# if not @props.isSelected
	# 		# @props.onChange @props.model, true
	# 	# QuestionUtil.recordResponse @props.model.get('id'), true
	# 	@refs.input.checked = true

	getInputType: ->
		switch @props.responseType
			when 'pick-all'
				'checkbox'
			else #'pick-one', 'pick-one-multiple-correct'
				'radio'

	render: ->
		isSelected = QuestionUtil.getResponse(@props.moduleData.questionState, @props.model)?.set is true

		`<OboComponent
			model={this.props.model}
			moduleData={this.props.moduleData}
			className={'obojobo-draft--chunks--mc-assessment--mc-choice' + (isSelected ? ' is-selected' : ' is-not-selected') + (this.props.model.modelState.score === 100 ? ' is-correct' : ' is-incorrect')}
		>
			<input
				ref="input"
				type={this.getInputType()}
				value={this.props.model.get('id')}
				checked={isSelected}
				name={this.props.model.parent.get('id')}

			/>
			<div className="children">
				{
					this.props.model.children.map((function(child, index) {
						var type = child.get('type')
						var isAnswerItem = type === 'ObojoboDraft.Chunks.MCAssessment.MCAnswer'
						var isFeedbackItem = type === 'ObojoboDraft.Chunks.MCAssessment.MCFeedback'

						if(isAnswerItem)
						{
							var Component = child.getComponentClass()
							return <Component key={child.get('id')} model={child} moduleData={this.props.moduleData} />
						}
					}).bind(this))
				}
			</div>
		</OboComponent>`

module.exports = MCChoice