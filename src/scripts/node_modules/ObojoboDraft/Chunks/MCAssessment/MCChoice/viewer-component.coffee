require './viewer-component.scss'

Common = window.ObojoboDraft.Common

OboComponent = Common.components.OboComponent
OboModel = Common.models.OboModel

MCChoice = React.createClass
	getDefaultProps: ->
		isSelected: false
		showFeedback: false
		type: 'practice'
		onChange: ->

	getInitialState: ->
		children: @createChildren(this.props.model.children.models)

	componentWillReceiveProps: (nextProps) ->
		if nextProps.model?
			@setState { children:@createChildren(this.props.model.children.models) }

	createChildren: (models) ->
		children = []
		hasFeedback = false
		for model in models
			children.push model
			if model.get('type') is 'ObojoboDraft.Chunks.MCAssessment.MCFeedback'
				hasFeedback = true

		if not hasFeedback
			if @props.model.modelState.score is 100
				children.push @createFeedbackItem('Correct!')
			else
				children.push @createFeedbackItem('Incorrect')

		children

	createFeedbackItem: (message) ->
		feedback = OboModel.create('ObojoboDraft.Chunks.MCAssessment.MCFeedback')
		text = OboModel.create('ObojoboDraft.Chunks.Text')
		console.log('text', text)
		text.modelState.textGroup.first.text.insertText(0, message)
		console.log('feedback', feedback)
		feedback.children.add text

		feedback

	onChange: (event) ->
		@props.onChange @props.model, event.target.checked

	onClick: (event) ->
		if not @props.isSelected
			@props.onChange @props.model, true

	getInputType: ->
		switch @props.model.parent.modelState.responseType
			when 'pick-all'
				'checkbox'
			else #'pick-one', 'pick-one-multiple-correct'
				'radio'

	render: ->
		`<OboComponent
			model={this.props.model}
			onClick={this.onClick}
			className={'obojobo-draft--chunks--mc-assessment--mc-choice' + (this.props.isSelected ? ' is-selected' : ' is-not-selected') + (this.props.model.modelState.score === 100 ? ' is-correct' : ' is-incorrect')}
		>
			<input
				type={this.getInputType()}
				value={this.props.model.get('id')}
				checked={this.props.isSelected}
				name={this.props.model.parent.get('id')}
				onChange={this.onChange}
			/>
			<div className="children">
				{
					this.state.children.map((function(child, index) {
						var type = child.get('type')
						var isAnswerItem = type === 'ObojoboDraft.Chunks.MCAssessment.MCAnswer'
						var isFeedbackItem = type === 'ObojoboDraft.Chunks.MCAssessment.MCFeedback'

						if(!isAnswerItem && !isFeedbackItem)
						{
							return null;
						}

						if(isFeedbackItem && !this.props.showFeedback)
						{
							return null;
						}

						var Component = child.getComponentClass()

						return <Component key={child.get('id')} model={child} />
					}).bind(this))
				}
			</div>
		</OboComponent>`

module.exports = MCChoice