OboModel = window.ObojoboDraft.Common.models.OboModel

Adapter =
	construct: (model, attrs) ->
		if attrs?.content?.shuffle?
			model.modelState.shuffle = attrs.content.shuffle
		else
			model.modelState.shuffle = false

		if attrs?.content?.limit?
			model.modelState.limit = attrs.content.limit
		else
			model.modelState.limit = 0

		if attrs?.content?.type?
			model.modelState.type = attrs.content.type
		else
			model.modelState.type = "practice"

		if attrs?.content?.solution?
			model.modelState.solution = OboModel.create(attrs.content.solution)
		else
			model.modelState.solution = null

	clone: (model, clone) ->
		clone.modelState.shuffle = model.modelState.shuffle
		clone.modelState.type = model.modelState.type
		clone.modelState.solution = model.modelState.solution.clone()

	toJSON: (model, json) ->
		json.content.shuffle = model.modelState.shuffle
		json.content.type = model.modelState.type
		json.content.solution = model.modelState.solution.toJSON()


module.exports = Adapter