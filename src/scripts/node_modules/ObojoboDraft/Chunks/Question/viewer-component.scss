@import '../../../../../scss/includes';

// .component[data-component-type="ObojoboDraft.Chunks.Question"]
// {
// 	padding-top: 2rem;
// 	padding-bottom: 2rem;
// }

.obojobo-draft--chunks--question
{
	$color-sep: rgba(0, 0, 0, 0.1);

	background: $color-bg;
	border-radius: 0.25rem;
	margin: 0 auto;
	padding: 0;
	// padding-top: 2rem;
	position: relative;
	width: $dimension-editor;
	padding-top: 1rem;
	margin-bottom: 1rem;
	border: 1px solid transparentize($color-shadow, 0.2);
	// font-size: 90%;

	&.is-active,
	&.is-viewed
	{
		.blocker
		{
			display: none;
		}
	}

	&.is-hidden
	{
		.blocker
		{
			position: absolute;
			left: 0;
			top: 0;
			right: 0;
			bottom: 0;
			background: $color-bg;
			cursor: pointer;
			transition: background $duration-animation-default;
			border-radius: 0.25rem;

			&:hover
			{
				// background: lighten($color-bg, 1%);

				span
				{
					transform: translate(-50%, -50%) scale(1.1, 1.1);
				}
			}

			span
			{
				transition: transform $duration-animation-default;
				font-family: $font-default;
				color: $color-action;
				position: absolute;
				left: 50%;
				top: 50%;
				transform: translate(-50%, -50%);
				pointer-events: none;
			}
		}
	}

	// &.is-viewed
	// {
	// 	.blocker
	// 	{
	// 		opacity: .9;
	// 	}
	// }

	&::after
	{
		color: $color-bg;
		font-family: $font-default;
		font-size: 0.7rem;
		font-weight: bold;
		left: 50%;
		line-height: 2em;
		padding: 0 1em;
		position: absolute;
		top: 0;
		transform: translate(-$dimension-editor / 2, 0) translate(3rem, 0);
	}

	&.is-type-practice
	{
		&::before
		{
			color: $color-text-minor;
			content: 'Practice';
			display: block;
			font-family: $font-default;
			font-size: 0.7rem;

			left: 50%;
			line-height: 2em;
			// padding: 0 1em;
			position: absolute;
			top: 0.4rem;
			transform: translate(-$dimension-editor / 2, 0) translate(3rem, 0);
		}

		&.is-correct
		{
			background: transparentize($color-correct, 0.7);

			&::after
			{
				background: darken($color-correct, 30%);
				content: '✓ Correct!';
			}
		}

		&.is-incorrect
		{
			&::after
			{
				background: darken(saturate($color-incorrect, 30%), 15%);
				content: '✖ Incorrect';
			}
		}
	}


}
