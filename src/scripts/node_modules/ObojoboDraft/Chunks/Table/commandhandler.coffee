Editor = window.Editor
Common = window.ObojoboDraft.Common

TextGroupCommandHandler = Editor.chunk.textChunk.TextGroupCommandHandler
TextGroupSelection = Common.textGroup.TextGroupSelection

module.exports = class CommandHandler extends TextGroupCommandHandler
	# splitText: (sel, chunk, shiftKey) -> false

	deleteSelection: (selection, chunk) ->
		chunk.markDirty()

		tgs = new TextGroupSelection chunk, selection.virtual

		chunk.modelState.textGroup.clearSpan tgs.start.groupIndex, tgs.start.offset, tgs.end.groupIndex, tgs.end.offset

		if tgs.position is 'start' or tgs.position is 'contains'
			# selection.setFutureCaret chunk, { offset: tgs.start.offset, groupIndex: tgs.start.groupIndex }
			selection.virtual.setCaret chunk, { offset: tgs.start.offset, groupIndex: tgs.start.groupIndex }

	deleteText: (selection, chunk, deleteForwards) ->
		# chunk.markDirty()
		# console.clear()

		tgs = new TextGroupSelection chunk, selection.virtual
		caret = tgs.start
		if (caret.isTextStart and not deleteForwards) or (caret.isTextEnd and deleteForwards) then return false

		super selection, chunk, deleteForwards

	onSelectAll: (selection, chunk) ->
		chunk.selectAll()
		true

	paste: (selection, chunk, text, html) ->
		@insertText selection, chunk, text

	canRemoveSibling: (selection, sibling) -> false