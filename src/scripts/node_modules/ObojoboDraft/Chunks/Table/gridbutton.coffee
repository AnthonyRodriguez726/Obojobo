require './gridbutton.scss'

MOUSE_OUT_DELAY_MS = 500
NUM_ROWS = 6
NUM_COLS = 6
DEFAULT_NUM_ROWS = 3
DEFAULT_NUM_COLS = 2

GridButton = React.createClass
	getInitialState: ->
		open: false
		desiredRows: DEFAULT_NUM_ROWS
		desiredCols: DEFAULT_NUM_COLS

	onButtonMouseOver: ->
		@setDimensions DEFAULT_NUM_ROWS, DEFAULT_NUM_COLS
		@onMouseOver()

	onMouseOver: ->
		clearInterval @mouseOutTimeoutId
		@setState { open:true }

	onMouseOut: ->
		@mouseOutTimeoutId = setTimeout (->
			@setState @getInitialState()
		).bind(@), MOUSE_OUT_DELAY_MS

	onMouseDown: ->
		event.preventDefault()
		# event.stopPropagation()

		@setState @getInitialState()
		@props.commandHandler @props.command, { rows:@state.desiredRows, cols:@state.desiredCols }

	setDimensions: (rows, cols) ->
		@setState {
			desiredRows: rows,
			desiredCols: cols
		}

	createRow: (rowIndex) ->
		state = @state
		setDimensions = @setDimensions
		onMouseDown = @onMouseDown

		self = @

		React.createElement('tr', { key:rowIndex }, [0...NUM_COLS].map (colIndex) ->
			# console.log 'gridkey', rowIndex + '-' + colIndex
			React.createElement('td', {
				className: (if rowIndex <= state.desiredRows - 1 and colIndex <= state.desiredCols - 1 then 'selected ' else '') + ((rowIndex + 1) + '-' + (colIndex + 1))
				key: rowIndex + '-' + colIndex
				onMouseOver: setDimensions.bind(self, rowIndex + 1, colIndex + 1)
				onMouseDown: onMouseDown.bind(self)
			})
		)

	render: ->
		createRow = @createRow

		if @state.open
			rows = [0...NUM_ROWS].map (index) -> createRow index

			grid = `<table
						onMouseOver={this.onMouseOver}
						onMouseOut={this.onMouseOut}
						key='table'
					>
						<tbody>{rows}</tbody>
					</table>`

			tooltip = `<div className='tooltip' key='tip'>Insert {this.state.desiredRows}Ã—{this.state.desiredCols} table</div>`
		else
			grid = null
			tooltip = null

		`<div className='grid-button' key='button' onMouseDown={this.onMouseDown.bind(this, DEFAULT_NUM_ROWS, DEFAULT_NUM_COLS)}>
			<a
				onMouseOver={this.onButtonMouseOver}
				onMouseOut={this.onMouseOut}
				alt={this.props.command.label}
				style={{'backgroundImage':'url("' + this.props.command.icon + '")'}}
			>
				this.props.command.label
			</a>
			<div className="table-container">
				{grid}
				{tooltip}
			</div>
		</div>`


module.exports = GridButton