ObojoboDraft = require 'ObojoboDraft'

Assets = ObojoboDraft.Assets

TableControls = React.createClass

	highlight: (className, action, tdClassName, img) ->
		# console.log 'highlight', tdClassName
		el = ReactDOM.findDOMNode(@)

		el.getElementsByClassName(className)[0].style.backgroundImage = img

		tds = if tdClassName is null then el.parentElement.getElementsByClassName('cell') else el.parentElement.getElementsByClassName(tdClassName)
		for td in tds
			td.classList[if tdClassName is null then 'remove' else 'add'] action

	positionButtons: ->
		el = ReactDOM.findDOMNode(@)
		if not el then return

		cellPos = @props.focus
		tdEl = el.parentElement.querySelector('.row-' + cellPos.row + '.col-' + cellPos.col)

		containerBBox = el.getBoundingClientRect()
		bbox = tdEl.getBoundingClientRect()
		left = bbox.left - containerBBox.left
		top = bbox.top - containerBBox.top
		bottom = top + bbox.height
		right = left + bbox.width

		@refs.addRowAboveBtn.style.top = top + 'px'
		@refs.addRowBelowBtn.style.top = bottom + 'px'
		@refs.addColLeftBtn.style.left = left + 'px'
		@refs.addColRightBtn.style.left = right + 'px'
		@refs.removeRowBtn.style.top = (top + bbox.height / 2) + 'px'
		@refs.removeColBtn.style.left = (left + bbox.width / 2) + 'px'

	addRow: (index) ->
		event.preventDefault()
		event.stopPropagation()
		event.stopImmediatePropagation()

		@props.addRow index

	addCol: (index) ->
		console.log '***addCol', __ds().startContainer

		sel = new ObojoboDraft.text.TextGroupSelection @props.selection.chunk, @props.chunk
		console.log 'sel', sel.type

		event.preventDefault()
		event.stopPropagation()
		event.stopImmediatePropagation()

		@props.addCol index

	removeRow: (index) ->
		event.preventDefault()
		event.stopPropagation()
		event.stopImmediatePropagation()

		@props.removeRow index

	removeCol: (index) ->
		event.preventDefault()
		event.stopPropagation()
		event.stopImmediatePropagation()

		@props.removeCol index

	onMouseUp: ->
		console.log '***mouseUp', __ds().startContainer

	componentDidUpdate: ->
		@positionButtons()

	componentDidMount: ->
		@positionButtons()

	render: ->
		cellPos = @props.focus

		if cellPos is null then return null


		chunk = @props.chunk
		data = chunk.componentContent
		numCols = data.textGroup.numCols

		addRowAboveBtn = addRowBelowBtn = addColLeftBtn = addColRightBtn = removeRowBtn = removeColBtn = null

		bgInsert = Assets.getBackgroundImage Assets.BUTTON_TABLE_INSERT
		bgRemove = Assets.getBackgroundImage Assets.BUTTON_TABLE_REMOVE
		bgInsertHover = Assets.getBackgroundImage Assets.BUTTON_TABLE_INSERT_HOVER
		bgRemoveHover = Assets.getBackgroundImage Assets.BUTTON_TABLE_REMOVE_HOVER

		addRowAboveBtn  = `<button
			ref="addRowAboveBtn"
			className="row-button add-above"
			key='button-add-above'
			onMouseDown={this.addRow.bind(null, cellPos.row)}
			onMouseOver={this.highlight.bind(null, 'add-above', 'insert-above', 'row-' + cellPos.row, bgInsertHover)}
			onMouseOut={this.highlight.bind(null, 'add-above', 'insert-above', null, bgInsert)}
			style={{
				backgroundImage: bgInsert
			}}>
				Add a row above
			</button>`
		addRowBelowBtn = `<button
			ref="addRowBelowBtn"
			className="row-button add-below"
			key='button-add-below'
			onMouseDown={this.addRow.bind(null, cellPos.row + 1)}
			onMouseOver={this.highlight.bind(null, 'add-below', 'insert-below', 'row-' + cellPos.row, bgInsertHover)}
			onMouseOut={this.highlight.bind(null, 'add-below', 'insert-below', null, bgInsert)}
			style={{
				backgroundImage: bgInsert
			}}>
				Add a row below
			</button>`
		addColLeftBtn = `<button
			ref="addColLeftBtn"
			className="col-button add-left"
			key='button-add-left'
			onMouseDown={this.addCol.bind(null, cellPos.col)}
			onMouseOver={this.highlight.bind(null, 'add-left', 'insert-left', 'col-' + cellPos.col, bgInsertHover)}
			onMouseOut={this.highlight.bind(null, 'add-left', 'insert-left', null, bgInsert)}
			style={{
				backgroundImage: bgInsert
			}}>
				Add a column left
			</button>`
		addColRightBtn = `<button
			ref="addColRightBtn"
			className="col-button add-right"
			key='button-add-right'
			onMouseDown={this.addCol.bind(null, cellPos.col + 1)}
			onMouseOver={this.highlight.bind(null, 'add-right', 'insert-right', 'col-' + cellPos.col, bgInsertHover)}
			onMouseOut={this.highlight.bind(null, 'add-right', 'insert-right', null, bgInsert)}
			style={{
				backgroundImage: bgInsert
			}}>
				Add a column right
			</button>`
		removeRowBtn = `<button
			ref="removeRowBtn"
			className="row-button remove-row"
			key='button-remove-row'
			onMouseDown={this.removeRow.bind(null, cellPos.row)}
			onMouseOver={this.highlight.bind(null, 'remove-row', 'remove', 'row-' + cellPos.row, bgRemoveHover)}
			onMouseOut={this.highlight.bind(null, 'remove-row', 'remove', null, bgRemove)}
			style={{
				backgroundImage: bgRemove
			}}>
				Remove row
			</button>`
		removeColBtn = `<button
			ref="removeColBtn"
			className="col-button remove-col"
			key='button-remove-col'
			onMouseDown={this.removeCol.bind(null, cellPos.col)}
			onMouseOver={this.highlight.bind(null, 'remove-col', 'remove', 'col-' + cellPos.col, bgRemoveHover)}
			onMouseOut={this.highlight.bind(null, 'remove-col', 'remove', null, bgRemove)}
			style={{
				backgroundImage: bgRemove
			}}>
				Remove col
			</button>`

		`<div className="buttons">
			{addRowAboveBtn}
			{addRowBelowBtn}
			{addColLeftBtn}
			{addColRightBtn}
			{removeRowBtn}
			{removeColBtn}
		</div>`


module.exports = TableControls