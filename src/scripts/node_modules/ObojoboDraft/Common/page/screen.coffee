OboSelectionRect = require 'ObojoboDraft/Common/selection/oboselectionrect'

PX_EDGE_PADDING = 50

class Screen
	constructor: (el) ->
		@el = el
		@intervalId = null
		@distance = 0
		@distanceLeft = 0
		@travelBy = 0

	# getScrollPosition: ->
	# 	x: @el.scrollTop
	# 	y: @el.scrollLeft

	# saveScrollPosition: ->
	# 	pos = @getScrollPosition()

	# 	@savedScrollPos = @getScrollPosition()
	# 	console.log 'Screen.saveScrollPosition', @savedScrollPos

	# restoreScrollPosition: ->
	# 	return if not @savedScrollPos?
	# 	console.log 'Screen.restoreScrollPosition', @savedScrollPos
	# 	window.scrollTo @savedScrollPos.x, @savedScrollPos.y

	scrollToTop: ->
		@el.scrollTop = 0

	scrollToBottom: ->
		@el.scrollTop = @el.scrollHeight

	getScrollDistanceNeededToPutClientRectIntoView: (clientRect) ->
		rect = @el.getBoundingClientRect()

		if not clientRect.valid            then return 0
		if clientRect.top < 0              then return clientRect.top - PX_EDGE_PADDING
		if clientRect.bottom > rect.height then return clientRect.bottom - rect.height + PX_EDGE_PADDING
		0

	getScrollDistanceNeededToPutElementIntoView:  (el) ->
		@getScrollDistanceNeededToPutClientRectIntoView el.getBoundingClientRect()

	getScrollDistanceNeededToPutSelectionIntoView: ->
		@getScrollDistanceNeededToPutClientRectIntoView OboSelectionRect.createFromSelection()

	scrollSelectionIntoViewIfNeeded: ->
		@distance = @getScrollDistanceNeededToPutSelectionIntoView()
		@el.scrollTop += @distance

	tweenByDistance: (distance) ->
		@distance = distance
		@distanceLeft = @distance

		if @distance isnt 0
			@travelBy = Math.max 1, parseInt(Math.abs(@distance) / 10, 10)

			clearInterval @intervalId
			@intervalId = setInterval (->
				if @distance < 1
					travel = Math.min @travelBy, @distanceLeft * -1
					@el.scrollTop -= travel
					@distanceLeft += travel

					if @distanceLeft >= 0
						clearInterval @intervalId
				else
					travel = Math.min @travelBy, @distanceLeft
					@el.scrollTop += travel
					@distanceLeft -= travel

					if @distanceLeft <= 0
						clearInterval @intervalId

			).bind(@), 10

	tweenElementIntoViewIfNeeded: (el) ->
		@tweenByDistance @getScrollDistanceNeededToPutElementIntoView(el)

	#@TODO - delete this?
	tweenSelectionIntoViewIfNeeded: ->
		@tweenByDistance @getScrollDistanceNeededToPutSelectionIntoView()


Screen.isElementVisible = (node) ->
	rect = node.getBoundingClientRect()
	not (rect.top > window.innerHeight or rect.bottom < 0)

window.__screen = Screen #@todo
module.exports = Screen