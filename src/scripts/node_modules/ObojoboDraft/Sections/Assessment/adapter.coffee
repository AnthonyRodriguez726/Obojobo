ScoreActions = require './scoreactions'

Common = window.ObojoboDraft.Common

Adapter =
	construct: (model, attrs) ->
		if attrs?.content?.attempts?
			if attrs.content.attempts is 'unlimited'
				model.modelState.attempts = Infinity
			else
				model.modelState.attempts = parseInt(attrs.content.attempts, 10)
		else
			model.modelState.attempts = 1

		if attrs?.content?.scoreActions?
			model.modelState.scoreActions = new ScoreActions(attrs.content.scoreActions)
		else
			model.modelState.scoreActions = new ScoreActions()

		# model.modelState.assessmentState =
		# 	inTest: false
		# 	scores: []
		# 	currentScore: 0


	clone: (model, clone) ->
		clone.modelState.attempts = model.modelState.attempts
		clone.modelState.hideNav = model.modelState.hideNav
		clone.modelState.scoreActions = model.modelState.scoreActions.clone()

		#@TODO - necessary?
		# clone.modelState.assessmentState =
		# 	inTest: model.modelState.assessmentState.inTest
		# 	currentScore: model.modelState.assessmentState.currentScore
		# 	scores: Object.assign [], model.modelState.assessmentState.scores

	toJSON: (model, json) ->
		json.content.attempts = model.modelState.attempts
		json.content.hideNav = model.modelState.hideNav
		json.content.scoreActions = model.modelState.scoreActions.toObject()


module.exports = Adapter