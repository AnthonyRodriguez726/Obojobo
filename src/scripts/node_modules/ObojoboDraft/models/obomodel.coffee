class OboModel extends Backbone.Model
	isOrphan: ->
		not @collection?

	addChildBefore: (sibling) ->
		return if @isOrphan()

		collection = @collection

		if collection.contains sibling
			collection.remove sibling

		collection.add sibling, { at:@get('index') }

	addChildAfter: (sibling) ->
		return if @isOrphan()

		collection = @collection

		if collection.contains sibling
			collection.remove sibling

		collection.add sibling, { at:@get('index') + 1 }

	moveTo: (index) ->
		return if @get('index') is index

		refChunk = @collection.at index

		if index < @get('index')
			refChunk.addChildBefore @
		else
			refChunk.addChildAfter @

	moveToTop: ->
		@moveTo 0

	moveToBottom: ->
		@moveTo @collection.length - 1

	prevSibling: ->
		return null if @isOrphan() or @isFirst()
		@collection.at @get('index') - 1

	nextSibling: ->
		return null if @isOrphan() or @isLast()
		@collection.at @get('index') + 1

	isFirst: ->
		return false if @isOrphan()
		@get('index') is 0

	isLast: ->
		return false if @isOrphan()
		@get('index') is @collection.length - 1

	isBefore: (otherChunk) ->
		return false if @isOrphan()
		@get('index') < otherChunk.get('index')

	isAfter: (otherChunk) ->
		return false if @isOrphan()
		@get('index') > otherChunk.get('index')

	remove: ->
		if not @isOrphan() then @collection.remove @

	replaceWith: (newChunk) ->
		return if @isOrphan() or newChunk is @

		# index = @get('index')
		# collection = @collection
		# collection.remove @
		# collection.add newChunk, { at:index }

		@addChildBefore newChunk
		@remove()


module.exports = OboModel