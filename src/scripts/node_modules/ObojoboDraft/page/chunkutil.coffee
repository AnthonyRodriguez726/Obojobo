Chunk = require 'ObojoboDraft/models/chunk'

# Utility methods for dealing with chunks

send = (fn, chunkOrChunks, selection, data = []) ->
	if not (chunkOrChunks instanceof Array)
		return chunkOrChunks.callComponentFn fn, selection, data

	chunks = chunkOrChunks
	results = []
	for chunk in chunks
		results.push chunk.callComponentFn fn, selection, data

	results


deleteSelection = (selection) ->
	vs = selection.virtual
	type = vs.type

	return if type is 'caret'
	# console.log JSON.stringify(selection.getSelectionDescriptor(), null, 2);
	# console.log 'con', vs.inbetween

	for node in vs.inbetween
		node.remove()

	startChunk = vs.start.chunk
	endChunk   = vs.end.chunk

	console.log '@TODO @TODO @TODO 2 - Have to clone!'
	vsClone = vs.clone()

	startChunk.deleteSelection selection

	selection.virtual = vsClone

	if type is 'chunkSpan'
		endChunk.deleteSelection selection
		if endChunk.canMergeWith selection, startChunk
			startChunk.merge selection, endChunk

	vs.collapse()


activateStyle = (style, selection, styleBrush) ->
	if selection.virtual.type is 'caret'
		styleBrush.add style, selection.styles[style]?
	else
		if selection.styles[style]?
			send 'unstyleSelection', selection.virtual.all, selection, [style]
		else
			send 'styleSelection', selection.virtual.all, selection, [style]


module.exports = {
	send: send
	deleteSelection: deleteSelection
	activateStyle: activateStyle
}