# Chrome sometimes has range startContainer / endContainer as an element node
# so we need to dig down in this case to find the first text node

DOMUtil = require 'ObojoboDraft/page/domutil'

class DOMSelection
	constructor: ->
		@domSelection = window.getSelection()
		@domRange = null

		if @domSelection.rangeCount > 0
			@domRange = @domSelection.getRangeAt 0

	getType: ->
		if @domSelection.type?
			return @domSelection.type.toLowerCase()

		if @domSelection.isCollapsed?
			if @domSelection.isCollapsed
				return 'caret'
			else
				return 'range'

		if @domSelection.focusNode is @domSelection.anchorNode and @domSelection.focusOffset is @domSelection.anchorOffset
			return 'caret'

		'range'

	getClientRects: ->
		if not @domRange? then return []
		@domRange.getClientRects()

	set: (startNode, startOffset, endNode, endOffset) ->
		r = document.createRange()

		r.setStart startNode, startOffset
		r.setEnd endNode, endOffset

		# setTimeout ( ->


		@domSelection.removeAllRanges()
		@domSelection.addRange r

	includes: (node) ->
		return false if not node?
		node.contains(@startText) and node.contains(@endText)


DOMSelection.set = (startNode, startOffset, endNode, endOffset) ->
	(new DOMSelection).set startNode, startOffset, endNode, endOffset

DOMSelection.includes = (node) ->
	(new DOMSelection).includes node


Object.defineProperties DOMSelection.prototype, {
	startContainer:
		get: -> if @domRange.startContainer.nodeType is Node.TEXT_NODE then @domRange.startContainer.parentElement else @domRange.startContainer
	startText:
		get: -> DOMUtil.getFirstTextNodeOfElement @domRange.startContainer
	startOffset:
		get: -> @domRange.startOffset
	endContainer:
		get: -> if @domRange.endContainer.nodeType is Node.TEXT_NODE then @domRange.endContainer.parentElement else @domRange.endContainer
	endText:
		get: -> DOMUtil.getFirstTextNodeOfElement @domRange.endContainer
	endOffset:
		get: -> @domRange.endOffset
}


module.exports = DOMSelection