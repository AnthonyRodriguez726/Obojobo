ObojoboDraft = window.ObojoboDraft

OboSelectionRect = require 'ObojoboDraft/selection/oboselectionrect'
DOMSelection = require 'ObojoboDraft/selection/domselection'
VirtualSelection = require 'ObojoboDraft/selection/virtualselection'


class Selection
	constructor: (module) ->
		@module = module
		@virtual = new VirtualSelection(@module)
		@saved = null
		@clear()

	saveVirtualSelection: ->
		@saved = @virtual.clone()

	restoreVirtualSelection: ->
		@virtual = @saved

	clear: ->
		@rect = null
		@chunkRect = null
		@dom = null

	getSelectionDescriptor: ->
		@virtual.toObject()

	fromObject: (o) ->
		@virtual.fromObject o
		@selectDOM()
		@update()

	selectDOM: () ->
		return if not @virtual.start?.chunk? or not @virtual.end?.chunk?

		s = @startChunk.getDOMSelectionStart()
		e = @endChunk.getDOMSelectionEnd()
		DOMSelection.set s.textNode, s.offset, e.textNode, e.offset

	update: ->
		# return if not document.getElementById('editor').contains(document.activeElement)
		# console.log 'UUUUUUUUUUPDATE!'

		console.time 'selection.update'
		# @clear()

		console.time 'new oboSelection'
		@dom = new DOMSelection()
		# @chunk.getFromDOMSelection @dom

		@virtual.fromDOMSelection @dom
		console.timeEnd 'new oboSelection'

		console.time 'OboSelectionRect.createFromSelection'
		@rect = OboSelectionRect.createFromSelection()
		@chunkRect = OboSelectionRect.createFromChunks @virtual.all
		console.timeEnd 'OboSelectionRect.createFromSelection'

		console.timeEnd 'selection.update'


Object.defineProperties Selection.prototype, {
	startChunk: get: ->
		if not @virtual?.start? then return null
		@virtual.start.chunk

	endChunk: get: ->
		if not @virtual?.end? then return null
		@virtual.end.chunk
}


module.exports = Selection