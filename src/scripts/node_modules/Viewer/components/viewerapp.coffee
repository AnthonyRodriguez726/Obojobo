require './viewerapp.scss'

ViewerPage = require './viewerpage'

ObojoboDraft = window.ObojoboDraft
VirtualSelection = ObojoboDraft.selection.VirtualSelection;
DOMSelection = ObojoboDraft.selection.DOMSelection;
TextGroupEl = ObojoboDraft.chunk.textChunk.TextGroupEl
Selection = ObojoboDraft.selection.Selection

ViewerApp = React.createClass
	getInitialState: ->


		# FakeSelectionClass = (module) ->
		# 	this.module = module;
		# 	this.savedSelection = null;
		# 	this.virtual = new VirtualSelection(module);
		# 	this.dom = null;

		# FakeSelectionClass.prototype.saveVirtualSelection = ->
		# 	this.savedSelection = this.module.editor.state.selection.virtual.clone();

		# FakeSelectionClass.prototype.restoreVirtualSelection = ->
		# 	this.module.editor.state.selection.virtual = this.savedSelection;

		# FakeSelectionClass.prototype.update = ->
		# 	@dom = new DOMSelection()
		# 	@virtual.fromDOMSelection @dom

		# FakeSelectionClass.prototype.selectDOM = ->
		# 	return if not @virtual.start?.chunk? or not @virtual.end?.chunk?

		# 	s = @startChunk.getDOMSelectionStart()
		# 	e = @endChunk.getDOMSelectionEnd()
		# 	DOMSelection.set s.textNode, s.offset, e.textNode, e.offset

		# Object.defineProperties(FakeSelectionClass.prototype, {
		# 	startChunk:
		# 		get: ->
		# 			console.log('SC');
		# 			if(!@module.editor.state.selection.virtual.start)
		# 				return null;

		# 			return @module.editor.state.selection.virtual.start.chunk;
		# 	endChunk:
		# 		get: ->
		# 			if(!@module.editor.state.selection.virtual.end)
		# 				return null;

		# 			return @module.editor.state.selection.virtual.end.chunk;
		# });


		@props.module.app = @

		window.__saveSel = (->
			@state.selection.update()
			# c = @state.selection.startChunk.getCopyOfSelection()
			# console.log(c);
			@state.selection.saveVirtualSelection();

			# copied = []
			len = @state.module.chunks.length
			len2 = @state.selection.virtual.all
			for chunk in @state.selection.virtual.all
				# newChunk = chunk.getCopyOfSelection()

				newChunk = chunk.clone(false)
				console.log 'newChunk', newChunk
				@state.module.chunks.add newChunk

			# @state.selection.virtual.__debug_print()

			@state.selection.virtual.setStart @state.module.chunks.at(len), @state.selection.virtual.start.data
			@state.selection.virtual.setEnd @state.module.chunks.at(@state.module.chunks.length - 1), @state.selection.virtual.end.data


			# @state.selection.virtual.__debug_print()


			@forceUpdate()
			setTimeout((->
				console.log('SELECT DOM!');
				# @state
				@state.selection.selectDOM();

			).bind(@), 1)

		).bind(@)
		# window.__restoreSel = (->
		# 	@state.selection.restoreVirtualSelection();
		# 	@state.selection.selectDOM();
		# ).bind(@)

		# window.__ccm = ObojoboDraft.chunk.ComponentClassMap


		# selection: new FakeSelectionClass(@props.module)
		selection: new Selection(@props.module)
		module: @props.module

	render: ->
		window.__state = @state
		window.__sel = @state.selection
		#<Modal modalElement={this.state.modalElement} showModalFn={showModalFn} />
		#<LoadingModal show={this.state.loading} />

		`<div className="viewer--components--viewer-app">
			<main ref="main">
				<div className='wrapper'>
					<ViewerPage
						module={this.props.module}
						ref="viewerPage"
					/>
				</div>
			</main>

		</div>`


module.exports = ViewerApp