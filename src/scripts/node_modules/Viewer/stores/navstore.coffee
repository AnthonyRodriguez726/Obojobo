NavUtil = require 'Viewer/util/navutil'

OBO = window.OBO
Store = window.ObojoboDraft.Common.flux.Store
Dispatcher = window.ObojoboDraft.Common.flux.Dispatcher
OboModel = window.ObojoboDraft.Common.models.OboModel



generateNav = (model) ->
	nav = []
	item = OBO.getItemForType(model.get('type'))
	if item.generateNav?
		nav = nav.concat item.generateNav(model)

	for child in model.children.models
		nav = nav.concat generateNav(child)

	nav

gotoIndex = (newNavTargetIndex) ->
	navTargetModel = NavUtil.getNavTargetModel(state)
	if navTargetModel
		navTargetModel.processTrigger 'onNavExit'

	state.navTargetIndex = newNavTargetIndex

	NavUtil.getNavTargetModel(state).processTrigger 'onNavEnter'

state = {
	items: []
	navTargetIndex: -1
	locked: false
	open: true
}

NavStore = Object.assign(new Store(),
	init: (model, startingId) ->
		state.items = generateNav model

		if startingId?
			gotoIndex NavUtil.getIndexById(state, startingId)
		else
			gotoIndex NavUtil.getNextIndex(state)

	getState: -> state

	setState: (newState) -> state = newState

	canNavigate: ->
		not state.locked and not state.disabled


)

Dispatcher.register (payload) ->
	switch payload.type
		when 'nav:prev'
			gotoIndex NavUtil.getPrevIndex(state)

		when 'nav:next'
			gotoIndex NavUtil.getNextIndex(state)

		when 'nav:goto'
			gotoIndex NavUtil.getIndexById(state, payload.value.id)

		when 'nav:lock'
			state.locked = true

		when 'nav:unlock'
			state.locked = false

		when 'nav:close'
			state.open = false

		when 'nav:open'
			state.open = true

		when 'nav:disable'
			state.disabled = true
			state.locked = true
			state.open = false

		when 'nav:enable'
			state.disabled = false
			state.locked = false

		when 'nav:toggle'
			state.open = not state.open

		when 'nav:openExternalLink'
			# window.location = payload.value.url
			window.open payload.value.url

		# when 'runAction'
		# 	# alert 'action'
		# 	console.log '-------------ACTION', payload
		# 	action = payload.value
		# 	# OBO.triggerActions[action.type](@, action)
		# 	OBO.triggerActions[action.type](null, action)

	NavStore.emitChange()

window.__ns = NavStore
module.exports = NavStore