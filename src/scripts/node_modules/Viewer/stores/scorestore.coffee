Store = window.ObojoboDraft.Common.flux.Store
Dispatcher = window.ObojoboDraft.Common.flux.Dispatcher

class ScoreStore extends Store
	constructor: ->
		super('scorestore')

		@state = {
			scores: {}
			viewing: null
			viewed: {}
		}

		Dispatcher.on
			'score:set': (payload) =>
				console.log 'setScore', payload
				@state.scores[payload.value.id] = payload.value.score
				@triggerChange()

			'score:clear': (payload) =>
				delete @state.scores[payload.value.id]
				@triggerChange()

			'score:viewQuestion': (payload) =>
				@state.viewing = payload.value.id
				@state.viewed[@state.viewing] = true
				@triggerChange()


	getScore: (model) ->
		score = @state.scores[model.get('id')]
		if typeof score is 'undefined' then return null
		score

	getState: -> @state

	setState: (newState) -> @state = newState

scoreStore = new ScoreStore()
module.exports = scoreStore
