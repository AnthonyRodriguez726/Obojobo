APIUtil = require 'Viewer/util/apiutil'

Store = window.ObojoboDraft.Common.flux.Store
Dispatcher = window.ObojoboDraft.Common.flux.Dispatcher
FocusUtil = window.ObojoboDraft.Common.util.FocusUtil
OboModel = window.ObojoboDraft.Common.models.OboModel

class ScoreStore extends Store
	constructor: ->
		super('scoreStore')

		Dispatcher.on
			'score:set': (payload) =>
				@state.scores[payload.value.id] = payload.value.score

				if(payload.value.score is 100)
					FocusUtil.unfocus()

				@triggerChange()

				model = OboModel.models[payload.value.id]
				APIUtil.postEvent(model.getRoot(), 'score:set', {
					id: payload.value.id,
					score: payload.value.score
				})

			'score:clear': (payload) =>
				delete @state.scores[payload.value.id]
				@triggerChange()

				model = OboModel.models[payload.value.id]
				APIUtil.postEvent(model.getRoot(), 'score:clear', {
					id: payload.value.id
				})

	init: ->
		@state = {
			scores: {}
		}

	getState: -> @state

	setState: (newState) -> @state = newState

scoreStore = new ScoreStore()
module.exports = scoreStore
