Editor = window.Editor
ObojoboDraft = window.ObojoboDraft

TextGroupCommandHandler = Editor.chunk.textChunk.TextGroupCommandHandler
FocusableCommandHandler = Editor.chunk.focusableChunk.FocusableCommandHandler

TextGroupSelection = ObojoboDraft.textGroup.TextGroupSelection
Chunk = ObojoboDraft.models.Chunk

module.exports = class CommandHandler extends TextGroupCommandHandler
	splitText: (selection, chunk, shiftKey) ->
		console.log 'splitText', arguments
		chunk.markDirty()

		# info = POS.getCaretInfo selection.chunk.start, chunk
		tgs = new TextGroupSelection chunk, selection.virtual

		newText = tgs.start.text.split tgs.start.offset

		newNode = Chunk.create() #@TODO - assumes it has a textGroup
		newNode.componentContent.textGroup.first.text = newText
		chunk.addChunkAfter newNode

		# selection.setFutureCaret newNode, { offset: 0, groupIndex: 0 }
		# TextGroupSelection.setCaretToGroupStart newNode, selection.virtual
		newNode.selectStart()

	deleteText: (selection, chunk, deleteForwards) ->
		tgs = new TextGroupSelection chunk, selection.virtual
		s = tgs.start

		if not deleteForwards and s.isGroupStart then return false
		if deleteForwards and s.isGroupEnd then return true

		super selection, chunk, deleteForwards

	paste: (selection, chunk, text, html) ->
		@insertText selection, chunk, text

	canMergeWith: (selection, chunk, otherChunk) ->
		super(selection, chunk,otherChunk) and chunk.nextSibling() is otherChunk

	canRemoveSibling: (selection, sibling) -> false

	onSelectAll: (selection, chunk) ->
		TextGroupSelection.selectText chunk, 0, selection.virtual
		true