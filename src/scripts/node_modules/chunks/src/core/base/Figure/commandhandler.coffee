TextGroupCommandHandler = Editor.command.TextGroupCommandHandler

ObojoboDraft = window.ObojoboDraft
TextGroupSelection = ObojoboDraft.text.TextGroupSelection
Chunk = ObojoboDraft.models.Chunk

module.exports = class CommandHandler extends TextGroupCommandHandler
	splitText: (selection, chunk, shiftKey) ->
		console.log 'splitText', arguments
		chunk.markDirty()

		# info = POS.getCaretInfo selection.chunk.start, chunk
		sel = new TextGroupSelection chunk, selection

		newText = sel.start.text.split sel.start.offset

		newNode = Chunk.create() #@TODO - assumes it has a textGroup
		newNode.componentContent.textGroup.first.text = newText
		chunk.addAfter newNode

		selection.setFutureCaret newNode, { offset: 0, groupIndex: 0 }

	selectStart: (selection, chunk) ->
		selection.setFutureCaret chunk, { groupIndex:'anchor:img-anchor', offset:0 }

	selectEnd: (selection, chunk) ->
		selection.setFutureCaret chunk, { groupIndex:'anchor:img-anchor', offset:0 }

	deleteText: (selection, chunk, deleteForwards) ->
		# return false
		sel = new TextGroupSelection chunk, selection

		if sel.start.isAnchor
			newChunk = chunk.revert selection
			newChunk.componentContent.textGroup = chunk.componentContent.textGroup.clone()
			return true

		# if not deleteForwards and sel.start.isTextStart then return true
		# if deleteForwards and sel.start.isTextEnd then return true

		super selection, chunk, deleteForwards

	canMergeWith: (selection, chunk, otherChunk) ->
		super(selection, chunk,otherChunk) and chunk.nextSibling() is otherChunk

	canRemoveSibling: (selection, sibling) -> false