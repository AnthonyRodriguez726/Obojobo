Viewer = require './viewer'

CommandHandler = require './commandhandler'
commandHandler = new CommandHandler()

ObojoboDraft = window.ObojoboDraft
TextGroup = ObojoboDraft.text.TextGroup
Text = ObojoboDraft.components.Text
Chunk = ObojoboDraft.models.Chunk
TextChunk = ObojoboDraft.components.TextChunk


Heading = React.createClass
	statics:
		type: 'ObojoboDraft.Chunks.Heading'
		register: ->
			OBO.registerChunk Heading
			OBO
				.addToolbarItem
					type: 'select'
					label: 'Change text type'
					selectedOption: 'Heading 1'
					options: [
						'Heading 1',
						'Heading 2',
						'Normal Text'
					]
					onClick: (toolbarItem, editorState) ->
						switch toolbarItem.selectedOption
							when 'Heading 1'
								newChunk = Chunk.create 'ObojoboDraft.Chunks.Heading'
								newChunk.componentContent.headingLevel = 1
							when 'Heading 2'
								newChunk = Chunk.create 'ObojoboDraft.Chunks.Heading'
								newChunk.componentContent.headingLevel = 2
							when 'Normal Text'
								newChunk = Chunk.create 'ObojoboDraft.Chunks.SingleText'

						if editorState.selection.chunk.type is 'caret'
							editorState.selection.startChunk.addAfter newChunk
							newChunk.absorb editorState.selection, editorState.selection.startChunk
						else
							newChunk.replaceSelection editorState.selection
					onSelectionUpdate: (toolbarItem, editorState) ->
						if editorState.selection.chunk?.start?.chunk?
							type = editorState.selection.startChunk.get('type')
							headingLevel = 0
							if type is 'ObojoboDraft.Chunks.Heading'
								headingLevel = editorState.selection.startChunk.componentContent.headingLevel

							for chunk in editorState.selection.chunk.all
								if chunk.get('type') isnt type
									type = null
									break
								else if type is 'ObojoboDraft.Chunks.Heading' and chunk.componentContent.headingLevel isnt headingLevel
									type = null
									break

							if type?
								switch type + headingLevel
									when 'ObojoboDraft.Chunks.Heading1'
										toolbarItem.selectedOption = 'Heading 1'
									when 'ObojoboDraft.Chunks.Heading2'
										toolbarItem.selectedOption = 'Heading 2'
									else
										toolbarItem.selectedOption = 'Normal Text'
							else
								toolbarItem.selectedOption = null
				, 0

				.addToolbarItem
					type: 'separator'
				, 1


		getCommandHandler: -> commandHandler

		# OBONODE DATA METHODS
		# ================================================
		createNewNodeData: ->
			textGroup: TextGroup.create(1)
			headingLevel: 1

		cloneNodeData: (data) ->
			textGroup: data.textGroup.clone()
			headingLevel: data.headingLevel

		# SERIALIZATION/DECODE METHODS
		# ================================================
		createNodeDataFromDescriptor: (descriptor) ->
			textGroup: TextGroup.fromDescriptor descriptor.content.textGroup, 1
			headingLevel: descriptor.content.headingLevel

		getDataDescriptor: (chunk) ->
			data = chunk.componentContent

			textGroup: data.textGroup.toDescriptor()
			headingLevel: data.headingLevel


	shouldComponentUpdate: ->
		@props.chunk.needsUpdate

	componentDidUpdate: ->
		@props.chunk.markUpdated()

	render: ->
		`<Viewer {...this.props} />`



module.exports = Heading