#@TODO - HAS TO REBUILD MOCKELEMENT STRUCTURE EVERYTIME, WOULD LIKE TO NOT HAVE TO DO THAT!

Viewer = require './viewer'
ListStyles = require './liststyles'
ListDetector = require './listdetector'

CommandHandler = require './commandhandler'
commandHandler = new CommandHandler()

ObojoboDraft = window.ObojoboDraft
OBO = window.OBO

TextGroup = ObojoboDraft.text.TextGroup
Chunk = ObojoboDraft.models.Chunk
ChunkUtil = ObojoboDraft.page.ChunkUtil

onSelectionUpdate = (toolbarItem, editorState, targetListType) ->
	chunk = editorState.selection.startChunk

	if editorState.selection.virtual.type is 'chunkSpan' or not chunk? or chunk.get('type') isnt List.type
		toolbarItem.state = 'off'
		return

	listType = chunk.componentContent.listStyles.type
	toolbarItem.state = if listType is targetListType then 'on' else 'off'


List = React.createClass
	statics:
		type: 'ObojoboDraft.Chunks.List'
		register: ->
			OBO.registerChunk List, {
				insertItem:
					label: 'List'
					icon: require 'svg-url?noquotes!./assets/insert-icon.svg'
					onInsert: ObojoboDraft.chunk.insert
			}
			OBO.addToolbarItem {
				type: 'toggle'
				label: 'Unordered List'
				icon: require 'svg-url?noquotes!./assets/toolbar-icon-bullet.svg'
				onClick: (toolbarItem, editorState) ->
					if toolbarItem.state is 'on'
						newChunk = Chunk.create()
					else
						newChunk = Chunk.create List

					ChunkUtil.replaceTextsWithinSelection editorState.selection, newChunk
				onSelectionUpdate: (toolbarItem, editorState, selection) ->
					onSelectionUpdate toolbarItem, editorState, 'unordered'
			}
			OBO.addToolbarItem {
				type: 'toggle'
				label: 'Ordered List'
				icon: require 'svg-url?noquotes!./assets/toolbar-icon-numeric.svg'
				onClick: (toolbarItem, editorState) ->
					if toolbarItem.state is 'on'
						newChunk = Chunk.create()
					else
						newChunk = Chunk.create List
						newChunk.componentContent.listStyles.type = 'ordered'

					ChunkUtil.replaceTextsWithinSelection editorState.selection, newChunk
				onSelectionUpdate: (toolbarItem, editorState, selection) ->
					onSelectionUpdate toolbarItem, editorState, 'ordered'
			}
			OBO.registerTextListener {
				match: (selection, editor) ->
					if selection.virtual.type is 'caret' and selection.startChunk.componentContent.textGroup?.first?
						st = selection.startChunk.componentContent.textGroup.first.text.value

						listResults = ListDetector st

						if listResults
							switch listResults.type
								when 'unordered'
									chunk = selection.startChunk
									newChunk = Chunk.create List
									chunk.replaceWith newChunk
									newChunk.markDirty()
									newChunk.selectAll()

								when 'ordered'
									chunk = selection.startChunk
									newChunk = Chunk.create List
									listStyles = newChunk.componentContent.listStyles
									listStyles.type = 'ordered'
									listStyles.set 0, {
										start: listResults.symbolIndex,
										bulletStyle: listResults.symbolStyle
									}
									chunk.replaceWith newChunk
									newChunk.markDirty()
									newChunk.selectAll()
			}

		getCommandHandler: (chunk) -> commandHandler

		# OBONODE DATA METHODS
		# ================================================
		createNewNodeData: ->
			textGroup: TextGroup.create(Infinity, { indent:0 })
			indent: 0
			listStyles: new ListStyles('unordered')

		cloneNodeData: (data) ->
			textGroup: data.textGroup.clone()
			indent: data.indent
			listStyles: data.listStyles.clone()

		# SERIALIZATION/DECODE METHODS
		# ================================================
		createNodeDataFromDescriptor: (descriptor) ->
			textGroup: TextGroup.fromDescriptor descriptor.content.textGroup, Infinity, { indent:0 }
			indent: 0
			listStyles: ListStyles.fromDescriptor descriptor.content.listStyles

		getDataDescriptor: (chunk) ->
			data = chunk.componentContent

			indent: data.indent
			textGroup: data.textGroup.toDescriptor()
			listStyles: data.listStyles.toDescriptor()

	componentDidUpdate: ->
		@props.chunk.markUpdated()

	render: ->
		`<Viewer {...this.props} />`


module.exports = List