ObojoboDraft = window.ObojoboDraft
StyleableText = ObojoboDraft.text.StyleableText
TextGroup = ObojoboDraft.text.TextGroup
Chunk = ObojoboDraft.models.Chunk
Text = ObojoboDraft.components.Text
TextChunk = ObojoboDraft.components.TextChunk
ChunkUtil = ObojoboDraft.page.ChunkUtil
StyleType = ObojoboDraft.text.StyleType

commandHandler = null

SingleText = React.createClass
	statics:
		type: 'ObojoboDraft.Chunks.SingleText'
		getCommandHandler: (chunk) -> commandHandler

		# OBONODE DATA METHODS
		# ================================================
		createNewNodeData: ->
			console.log 'st.cnnd'
			# console.log 'ST.createNewNodeData', data
			textGroup: TextGroup.create(1)
			indent: 0
			type: 'p'

		cloneNodeData: (data) ->
			clone = data.textGroup.clone()
			# if clone.length is 0
				# clone.add()

			# console.log 'ST.cloneNodeData', data
			textGroup: clone
			indent: data.indent
			type: data.type

		# SERIALIZATION/DECODE METHODS
		# ================================================
		createNodeDataFromDescriptor: (descriptor) ->
			console.log 'st.cndfd', descriptor
			# console.log 'ST.createNodeDataFromDescriptor', descriptor
			textGroup: TextGroup.fromDescriptor descriptor.content.textGroup, 1
			indent: descriptor.content.indent
			type: descriptor.content.type

		getDataDescriptor: (chunk) ->
			# console.log 'ST.getDataDescriptor', chunk
			data = chunk.componentContent

			indent: data.indent
			textGroup: data.textGroup.toDescriptor()
			type: data.type

		# HTML METHODS
		# ================================================
		createNewNodesFromElement: (el) ->
			group = TextGroup.create(1)
			group.first.text = StyleableText.createFromElement(el)

			[
				Chunk.create @, {
					textGroup: group
					indent: 0
					type: 'p'
				}
			]

	shouldComponentUpdate: ->
		@props.chunk.needsUpdate

	componentDidUpdate: ->
		@props.chunk.markUpdated()

	render: ->
		data = @props.chunk.componentContent

		`<TextChunk className="obojobo-draft--chunks--single-text pad" indent={data.indent}>
			<p><Text text={data.textGroup.first.text} groupIndex="0" /></p>
		</TextChunk>`


OBO.registerChunk SingleText, {
	default: true
	insertItem:
		label: 'Text'
		icon: require 'svg-url?noquotes!./assets/insert-icon.svg'
		onInsert: ObojoboDraft.chunk.insert
}



module.exports = SingleText