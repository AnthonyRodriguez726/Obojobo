TextGroupCommandHandler = Editor.command.TextGroupCommandHandler

module.exports = class CommandHandler extends TextGroupCommandHandler
	splitText: (sel, chunk, shiftKey) ->
		return @insertText sel, chunk, "\n"

	deleteSelection: (selection, chunk) ->
		chunk.markDirty()

		sel = new TextGroupSelection chunk, selection

		chunk.componentContent.textGroup.clearSpan sel.start.groupIndex, sel.start.offset, sel.end.groupIndex, sel.end.offset

		if sel.position is 'start' or sel.position is 'contains'
			selection.setFutureCaret chunk, { offset: sel.start.offset, groupIndex: sel.start.groupIndex }

	deleteText: (selection, chunk, deleteForwards) ->
		chunk.markDirty()

		sel = new TextGroupSelection chunk, selection
		data = chunk.componentContent

		[start, end] = if not deleteForwards then [sel.start.offset - 1, sel.start.offset] else [sel.start.offset, sel.start.offset + 1]

		sel.start.text.deleteText start, end

		selection.setFutureCaret chunk, { offset: start, groupIndex: sel.start.groupIndex }