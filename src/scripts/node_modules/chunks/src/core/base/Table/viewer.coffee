require './viewer.scss'

GridTextGroup = require './gridtextgroup'
SelectionHandler = require './selectionhandler'

ObojoboDraft = window.ObojoboDraft
TextGroupEl = ObojoboDraft.chunk.textChunk.TextGroupEl
TextGroupSelectionHandler = ObojoboDraft.chunk.textChunk.TextGroupSelectionHandler

selectionHandler = new SelectionHandler

Table = React.createClass
	statics:
		type: 'ObojoboDraft.Chunk.Table'
		register: ->
			OBO.registerChunk Table
		getSelectionHandler: (chunk) -> selectionHandler

		createNewNodeData: ->
			textGroup: GridTextGroup.create(3, 3)
			position: 'center'
			header: true

		cloneNodeData: (data) ->
			textGroup: data.textGroup.clone()
			position: data.position
			header: data.header

		createNodeDataFromDescriptor: (descriptor) ->
			content = descriptor.content

			textGroup: GridTextGroup.fromDescriptor content.textGroup
			position: content.position
			header: content.header

		getDataDescriptor: (chunk) ->
			data = chunk.componentContent

			textGroup: data.textGroup.toDescriptor()
			position: data.position
			header: data.header

	render: ->
		chunk = @props.chunk
		data = chunk.componentContent
		numCols = data.textGroup.numCols

		if data.header
			row = data.textGroup.items.slice(0, numCols).map (textGroupItem, index) ->
				`<th
					key={index}
					className={'cell row-0 col-' + index}
					data-table-position={chunk.get('id') + ',0,' + index}
				>
					<TextGroupEl text={textGroupItem.text} groupIndex={index} />
				</th>`

			header = `<tr key="header">
				{ row }
			</tr>`
		else
			header = null

		startIndex = if data.header then 1 else 0
		rows = [startIndex...data.textGroup.numRows].map (rowNum) ->
			row = data.textGroup.items.slice(rowNum * numCols, (rowNum + 1) * numCols).map (textGroupItem, index) ->
				`<td
					key={index}
					className={'cell row-' + rowNum + ' col-' + index}
					data-table-position={chunk.get('id') + ',' + rowNum + ',' + index}
				>
					<TextGroupEl text={textGroupItem.text} groupIndex={rowNum * numCols + index} />
				</td>`

			`<tr key={rowNum}>
				{ row }
			</tr>`


		`<div className="obojobo-draft--chunks--table viewer pad">
			<div className="container">
				<table
					className="view"
					ref="table"
					key="table"
				>
					<thead key="thead">
						{header}
					</thead>
					<tbody key="tbody">
						{rows}
					</tbody>
				</table>
			</div>
		</div>`


Table.register()

module.exports = Table